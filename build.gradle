buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
    }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'java-library-distribution'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'

archivesBaseName = 'bibleget'
group 'io.bibleget'
version '2.8'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
//        resources {
//            srcDirs = ['src/resources']
//        }
    }
}

dependencies {
    compileOnly "org.openoffice:juh:$openOfficeVersion"
    compileOnly "org.openoffice:ridl:$openOfficeVersion"
    compileOnly "org.openoffice:unoil:$openOfficeVersion"
    compileOnly "org.openoffice:jurt:$openOfficeVersion"
    compileOnly "org.openoffice:officebean:$openOfficeVersion"

    implementation 'org.apache.commons:commons-text:1.9'
    implementation "javax.json:javax.json-api:1.1.4"
    implementation "org.apache.commons:commons-lang3:3.11"
    implementation "org.apache.commons:commons-text:1.9"
    implementation "com.glazedlists:glazedlists:1.11.0"
}

//ant.importBuild 'build.xml'

//java {
//    withSourcesJar()
//    withJavadocJar()
//}

jar {
    manifest {
        attributes('UNO-Type-Path': '${project_class_name}_IDL_types.jar',
                'RegistrationClassName': '${project_package}.CentralRegistrationClass',
                'Class-Path': configurations.runtimeClasspath.collect { "lib/" + it.getName() }.join(' '))
        // we need this for new section named ${package_path}/CentralRegistrationClass.class
        attributes('RegistrationClasses': '${project_package}.${project_class_name}Impl', '${package_path}/CentralRegistrationClass.class')
    }
}

//tasks.named('compileGroovy') {
//    // add IDL type classes to the classpath
//    classpath += files("build/classes")
//}

// fix for extra top dir in OXT
//distributions {
//    main {
//        // distributionBaseName = '${project_name}'
//        contents {
//            from {
//                "${build}/distribution-files/application"
//            }
//            into '/'
//            // filesMatching("**/*.xml") {
//            //     expand(project.properties)
//            // }
//        }
//    }
//}

distZip {
    archiveExtension = 'oxt'
    entryCompression = ZipEntryCompression.STORED
}

//compileJava.dependsOn("clean")
//compileJava.dependsOn("jar-idl-types")
